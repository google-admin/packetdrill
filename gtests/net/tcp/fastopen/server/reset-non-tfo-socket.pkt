//
// Send a RST to a fully established socket with pending data before
// it is accepted.
//
// The socket with pending data won't go away and can still be accepted
// with data read. But it will be in TCP_CLOSE state.
//
`../../common/defaults.sh`

    0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
  +.1 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
   +0 bind(3, ..., ...) = 0
   +0 listen(3, 1) = 0
   +0 < S 0:10(10) win 32792 <mss 1460,sackOK,nop,nop,FOEXP aaaaaaaaaaaaaaaa>
   +0 > S. 0:0(0) ack 1 <mss 1460,nop,nop,sackOK, FOEXP TFO_COOKIE>
   +0 < . 1:1(0) ack 1 win 32792
  +.1 < . 1:11(10) ack 1 win 32792
   +0 < R. 11:11(0) win 32792
// A valid reset won't make the fully-established socket go away.
   +0 accept(3, ..., ...) = 4
   +0 %{ assert (tcpi_options & TCPI_OPT_SYN_DATA) == 0, tcpi_options }%
// It's just that the acceptor will get a dead, unusable socket
// (in TCP_CLOSE state).
   +0 %{ assert tcpi_state == TCP_CLOSE, tcpi_state }%
   +0 write(4, ..., 100) = -1 ECONNRESET(Connection reset by peer)
   +0 read(4, ..., 512) = 10
   +0 read(4, ..., 512) = 0
