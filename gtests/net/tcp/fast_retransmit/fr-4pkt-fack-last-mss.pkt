// Test a RACK fast retransmit with 4 packets outstanding.
// In this variant the receiver SACKs the last of 4 packets.

// Set up config.
`../common/defaults.sh`

// Establish a connection.
    0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
   +0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
   +0 bind(3, ..., ...) = 0
   +0 listen(3, 1) = 0

   +0 < S 0:0(0) win 32792 <mss 1000,sackOK,nop,nop,nop,wscale 7>
   +0 > S. 0:0(0) ack 1 <mss 1460,nop,nop,sackOK,nop,wscale 8>
  +.1 < . 1:1(0) ack 1 win 320
   +0 accept(3, ..., ...) = 4

// Send 4 data segments. 1, 2, and 3 are lost.
   +0 write(4, ..., 4000) = 4000
   +0 > P. 1:4001(4000) ack 1

// Get a SACK for the last segment we transmitted.
// Sender is using RACK so we delay fast retransmit.
  +.1 < . 1:1(0) ack 1 win 320 <sack 3001:4001,nop,nop>

// rtx by rack reo timer
+.040 > . 1:1001(1000) ack 1
