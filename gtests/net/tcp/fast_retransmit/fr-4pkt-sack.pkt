// Test fast retransmit with 4 packets outstanding, receiver sending SACKs.
// Assumes initial cwnd > 3 (e.g. IW=10).
// In this variant the receiver supports SACK.

// Set up config.
`../common/defaults.sh`

// Establish a connection.
    0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
   +0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
   +0 bind(3, ..., ...) = 0
   +0 listen(3, 1) = 0

  +.1 < S 0:0(0) win 32792 <mss 1460,sackOK,nop,nop,nop,wscale 7>
   +0 > S. 0:0(0) ack 1 <mss 1460,nop,nop,sackOK,nop,wscale 8>
  +.1 < . 1:1(0) ack 1 win 257
   +0 accept(3, ..., ...) = 4

// Send 4 data segments.
   +0 write(4, ..., 5840) = 5840
   +0 > P. 1:5841(5840) ack 1

// Get 3 ACKs.
  +.1 < . 1:1(0) ack 1 win 257 <sack 1461:2921,nop,nop>
   +0 < . 1:1(0) ack 1 win 257 <sack 1461:4381,nop,nop>
   +0 < . 1:1(0) ack 1 win 257 <sack 1461:5841,nop,nop>
// We've received 3 duplicate ACKs, so we do a fast retransmit.
   +0 > . 1:1461(1460) ack 1

// Receiver ACKs all data.
  +.1 < . 1:1(0) ack 5841 win 257

// Clean up.
  +.1 close(4) = 0
   +0 > F. 5841:5841(0) ack 1
  +.1 < F. 1:1(0) ack 5842 win 257
+.001 > . 5842:5842(0) ack 2
